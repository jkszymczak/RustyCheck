<rusty_check> ::= <cases> | <rust_code> | " "

<cases> ::= <case> <cases> | <case>

<case> ::= "case " <identifier> "{ " <given> <compute> <check> " }"
         | "case " <identifier> "{ " <compute> <check> " }"
         | "case " <identifier> "{ " <check> " }"

<given> ::= "given" "{ " <assignments> " }" | " "
<assignments> ::= <assignment> "," <assignments>
                | <assignment>
                | " "
<assignment> ::= <non_mutable_assignment> | <mutable_assignment>
<non_mutable_assignment> ::= <identifier> " = " <expression>
<mutable_assignment> ::= "mut " <non_mutable_assignment>
<compute> ::= "do" "{" <rust_code> "}"

<create_mock> ::= ;; sub dsl for creating mocks

<check> ::= "check" "{ " <conditions> " }"
<conditions> ::= <condition> " or " <conditions>
               | <condition> " and " <conditions>
               | "for any " <identifier> " in " <identifier> ", " <conditions>
               | "for each " <identifier> " in " <identifier> ", " <conditions>
               | <condition>
<condition> ::= <expression> <symbol> <expression>
<symbol> ::= " equal "
           | <other_symbol>
           | " equal or " <other_symbol>
<other_symbol> ::= " less than "
                 | " greater than "

<expression> ::=  <rust_expression>
                | <rust_block>
<rust_block> ::= " rust {" <rust_code> "}"
<rust_code> ::= " "
<rust_expression> ::= " "
<identifier> ::= ( [a-z] | [A-Z] ) ( [a-z] | [A-Z] )+
